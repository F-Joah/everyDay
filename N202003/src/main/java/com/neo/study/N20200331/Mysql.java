package com.neo.study.N20200331;

/**
 * @author Joah
 * @time 2020/3/31 14:31
 */
public class Mysql {

    /**
     * “脏读”，“不可重复读” 和 “幻读”，其实都是数据库一致性问题，必须由数据库提供一定的事务隔离机制来解决
     *
     * 读数据一致性及允许的并发副作用              读数据一致性                  脏读          不可重复读           幻读
     * 隔离级别
     *------------------------------------------------------------------------------------------------------------------
     *  未提交读(Read uncommitted)   最低级别，只能保证不读取物理上损坏的数据     是                  是              是
     *  已提交读(Read committed)          语句级                                否                  否              是
     *  可重复读()                        数据级                                否                  否              是
     *  可序列化                         高级，事务级                           否                  否              否
     *------------------------------------------------------------------------------------------------------------------
     * 数据库的事务隔离越严格，并发副作用越小，但付出的大家越大，因为事务隔离实质上就是使事务再一定程度上 “串行化”进行，这虽然
     * 与 “并发”是矛盾的，同时，不同的应用对读一致性和事务隔离程度的要求也是不同的，比如许多应用对 “不可重复读” 和 “幻读” 并不
     * 敏感，可能更关心数据并发访问的能力
     *
     */








}
